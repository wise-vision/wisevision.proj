name: Docker images build and push

on:
  workflow_dispatch:
    inputs:
      build_target:
        description: 'Select an image to build'
        required: true
        default: 'all'
        type: choice
        options:
          - base
          - base-and-grpc
          - all
  pull_request:
    branches:
      - main
    paths:
      - 'docker-files/wisevision-base-image/**'
      - 'docker-files/wisevision-base-and-grpc-image/**'
  push:
    branches:
      - main
  repository_dispatch:
    types: [trigger-build-and-push]
  schedule:
    - cron: '0 4 * * 0'

jobs:
  build_base_image:
    if: github.event_name == 'pull_request' || github.event_name == 'schedule'
    runs-on: wisevision-runner
    container:
      image: ubuntu:22.04
    
    steps:
      - name: Install Git
        run: |
          apt-get update
          apt-get install -y git

      - name: Install vcs
        run: |
          apt-get update
          apt-get install -y python3-pip
          pip3 install vcstool

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT_TOKEN }}
      
      - name: Configure Git for https access
        run: |
          git config --global url."https://${{ secrets.PAT_TOKEN }}@github.com/".insteadOf "https://github.com/"

      - name: Import repositories using vcs
        run: |
          vcs import --recursive < ./docker-files/wisevision-base-image/image.repos

      - name: Install Docker CLI
        run: |
          apt-get update
          apt-get install -y docker.io

      - name: Docker build
        run: |
          docker build -t wisevision_base_image ./docker-files/wisevision-base-image

  build_base_and_grpc_image:
    if: github.event_name == 'pull_request' || github.event_name == 'schedule'
    runs-on: wisevision-runner
    container:
      image: ubuntu:22.04

    steps:
      - name: Install Git
        run: |
          apt-get update
          apt-get install -y git

      - name: Install vcs
        run: |
          apt-get update
          apt-get install -y python3-pip
          pip3 install vcstool

      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Install Docker CLI
        run: |
          apt-get update
          apt-get install -y docker.io

      - name: Docker build
        run: |
          docker build -t wisevision_base_image ./docker-files/wisevision-base-and-grpc-image

  build_and_push_base_image:
    if: github.event_name == 'push' || 
        (github.event_name == 'repository_dispatch' && github.event.action == 'trigger-build-and-push') || 
        (github.event_name == 'workflow_dispatch' && (github.event.inputs.build_target == 'base' || github.event.inputs.build_target == 'all'))
    runs-on: wisevision-runner
    container:
      image: ubuntu:22.04
    
    steps:
      - name: Install Git
        run: |
          apt-get update
          apt-get install -y git

      - name: Install vcs
        run: |
          apt-get update
          apt-get install -y python3-pip
          pip3 install vcstool

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT_TOKEN }}
      
      - name: Configure Git for https access
        run: |
          git config --global url."https://${{ secrets.PAT_TOKEN }}@github.com/".insteadOf "https://github.com/"

      - name: Import repositories using vcs
        run: |
          vcs import --recursive < ./docker-files/wisevision-base-image/image.repos

      - name: Install Docker CLI
        run: |
          apt-get update
          apt-get install -y docker.io

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image for multiple architectures
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 \
          --file docker-files/wisevision-base-image/Dockerfile \
          --tag ${{ secrets.DOCKER_HUB_USERNAME }}/ros_with_wisevision_msgs_and_wisevision_core:humble \
          --push \
          .

  build_and_push_base_and_grpc_image:
    if: github.event_name == 'push' || 
        (github.event_name == 'repository_dispatch' && github.event.action == 'trigger-build-and-push') || 
        (github.event_name == 'workflow_dispatch' && (github.event.inputs.build_target == 'base-and-grpc' || github.event.inputs.build_target == 'all'))
    needs: build_and_push_base_image
    runs-on: wisevision-runner
    container:
      image: ubuntu:22.04
    
    steps:

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Docker CLI
        run: |
          apt-get update
          apt-get install -y docker.io

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image for multiple architectures
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 \
          --file docker-files/wisevision-base-and-grpc-image/Dockerfile \
          --tag ${{ secrets.DOCKER_HUB_USERNAME }}/ros_with_wisevision_msgs_wisevision_core_and_grpc:humble \
          --push \
          .